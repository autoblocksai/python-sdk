name: CI - Vendor

on:
  push:
  schedule:
    # Every day at ~7:17am Chicago time.
    #
    # Using a non-zero minute offset since GitHub Actions suggests
    # running jobs at a random minute to avoid overloading their
    # servers.
    #
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    - cron: "17 12 * * *"

env:
  POETRY_VERSION: "1.5.1"
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  setup:
    runs-on: ubuntu-latest

    outputs:
      langchain-versions: ${{ steps.langchain-versions.outputs.versions }}
      openai-versions: ${{ steps.openai-versions.outputs.versions }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: langchain-versions
        uses: ./.github/actions/get-recent-pypi-versions
        with:
          package: langchain
          version-filter: "0.0."

      - id: openai-versions
        uses: ./.github/actions/get-recent-pypi-versions
        with:
          package: openai
          version-filter: "0."

  langchain:
    needs: setup

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        langchain-version: ${{ fromJson(needs.setup.outputs.langchain-versions) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version-file: ".python-version"

      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: poetry install

      - name: Install latest version of openai
        run: poetry add --group=dev openai

      - name: Install langchain ${{ matrix.langchain-version }}
        run: poetry add --group=dev langchain==${{ matrix.langchain-version }}

      # Required by LLMMathChain
      - name: Install latest version of numexpr
        # Not using poetry here because numexpr requires python 3.9 or above
        # but our package's pyproject supports 3.8. This test is only run on
        # the version in .python-version, though, which will be above 3.8.
        run: poetry run pip install numexpr

      - name: Run tests
        run: poetry run pytest tests/vendor/langchain

  openai:
    needs: setup

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        openai-version: ${{ fromJson(needs.setup.outputs.openai-versions) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version-file: ".python-version"

      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: poetry install

      - name: Install openai ${{ matrix.openai-version }}
        run: poetry add --group=dev openai==${{ matrix.openai-version }}

      - name: Run tests
        run: poetry run pytest tests/vendor/openai

  notify:
    needs:
      - langchain
      - openai

    if: always() && contains(needs.*.result, 'failure') && github.event_name == 'schedule'

    runs-on: ubuntu-latest

    steps:
      - uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": ":warning:  Workflow `${{ github.workflow }}` in repository `${{ github.repository }}` failed. <${{ env.run-url }}|Logs>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

          run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
